{{> navbar user }}

<div class="container">
    <div class="row">
        <div class="col-md">
            <div class="jumbotron text-center foundTitle">
                <h4 class="display-6">Post Found Pet</h4>
            </div>
        </div>
    </div>
    <div class="row justify-content-center">
        <div class="col-md-6 col-md-offset-3">
            <form class="found-pet">
                <div class="form-group">
                    <label>Choose Pet Type</label>
                    <div class="custom-control custom-radio">
                        <input type="radio" id="cat" name="type" value="Cat" class="custom-control-input" required>
                        <label class="custom-control-label" for="cat">Cat</label>
                    </div>
                    <div class="custom-control custom-radio">
                        <input type="radio" id="dog" name="type" value="Dog" class="custom-control-input">
                        <label class="custom-control-label" for="dog">Dog</label>
                    </div>
                </div>
                <hr>
                <div class="form-group">
                    <input type="file" id="fileInput">
                    <p id="status">Select a file or continue with default image</p>
                    <img id="preview" height="110px" width="110px" src="/paw.jpg">

                    <input type="hidden" id="petUrl" name="petUrl" value="/paw.jpg">
                </div>
                <div class="form-group">
                    <label for="petDescriptionInput">Message/Pet Description</label>
                    <textarea class="form-control" id="petDescriptionInput" name="petDescription"
                        placeholder="Enter pet description" required></textarea>
                </div>
                <label>Enter Closest Major Intersection Where the Pet Was Found</label>
                <hr>
                <div class="form-group">
                    <label for="crossStreetOneInput">Cross Street One</label>
                    <input type="text" class="form-control" id="crossStreetOneInput" name="crossStreetOne"
                        placeholder="Cross Street One" required>
                </div>
                <div class="form-group">
                    <label for="crossStreetTwoInput">Cross Street Two</label>
                    <input type="text" class="form-control" id="crossStreetTwoInput" name="crossStreetTwo"
                        placeholder="Cross Street Two" required>
                </div>
                <button type="submit" class="btn btn-primary">Post Pet</button>
            </form>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        var petPic = "/paw.jpg";

    // --- Handle Photo Upload to S3 Bucket in AWS ---
        function uploadFile(file, signedRequest, url) {
            const xhr = new XMLHttpRequest();
            xhr.open('PUT', signedRequest);
            xhr.onreadystatechange = () => {
                if (xhr.readyState === 4) {
                    if (xhr.status === 200) {
                        petPic = url;
                        document.getElementById('preview').src = url;
                        document.getElementById('petUrl').value = url;
                    }
                    else {
                        alert('Could not upload file.');
                    }
                }
            };
            console.log(signedRequest);
            xhr.send(file);
        }

        /*
          Function to get the temporary signed request from the app.
          If request successful, continue to upload the file using this signed
          request.
        */
        function getSignedRequest(file) {
            const xhr = new XMLHttpRequest();
            var fileType = file.type.substring(6);
            xhr.open('GET', `/api/pets/sign-s3/${file.name}/${fileType}`);
            xhr.onreadystatechange = () => {
                if (xhr.readyState === 4) {
                    if (xhr.status === 200) {
                        const response = JSON.parse(xhr.responseText);
                        console.log(response);
                        uploadFile(file, response.signedRequest, response.url);
                    }
                    else {
                        alert('Could not get signed URL.');
                    }
                }
            };
            xhr.send();
        }

        /*
         Function called when file input updated. If there is a file selected, then
         start upload procedure by asking for a signed request from the app.
        */
        function initUpload() {
            const files = document.getElementById('fileInput').files;
            const file = files[0];
            if (file == null) {
                return alert('No file selected.');
            }
            getSignedRequest(file);
        }

        /*
         Bind listeners when the page loads.
        */
        (() => {
            document.getElementById('fileInput').onchange = initUpload;
        })();
    // --- End Photo Upload Handlers ---

        // Getting references to our form and inputs
        var foundForm = $("form.found-pet");

        foundForm.on("submit", function (event) {
            event.preventDefault();
            var petTypeInput = $("input[name='type']:checked");
            var petDescriptionInput = $("textarea#petDescriptionInput");
            var crossStreetOneInput = $("input#crossStreetOneInput");
            var crossStreetTwoInput = $("input#crossStreetTwoInput");
            var petData = {
                petType: petTypeInput.val(),
                petDescription: petDescriptionInput.val().trim(),
                location: crossStreetOneInput.val().trim() + "/" + crossStreetTwoInput.val().trim()
            };

            setLocation(petData);
            petTypeInput.val();
            petDescriptionInput.val("");
            crossStreetOneInput.val("");
            crossStreetTwoInput.val("");

        // Get a locationId for the pet by either creating location or accessing an existing one.
            function setLocation(petData) {
                $.get("/api/locations", {
                })
                    .then((response) => {
                        for (let i = 0; i < response.length; i++) {
                            if (response[i].name === petData.location) {
                                createPet(petData, response[i].id);
                            }
                        }
                    });

                $.post("/api/locations", {
                    name: petData.location
                })
                    .then((response) => {
                        createPet(petData, response.id);
                    });
            }

        // Create the pet
            function createPet(petData, locationId) {
                console.log(petData);
                $.post("/api/pets", {
                    petType: petData.petType,
                    description: petData.petDescription,
                    LocationId: locationId,
                    picture: petPic
                }).then(response => {
                    createPost(response.id);
                });
            }

        // Create the post
            function createPost(petId) {
                $.post("/api/posts", {
                    title: "Found",
                    PetId: petId
                }).then(response => {
                    window.location.replace("/profile");
                });
            }
        });
    });
</script>